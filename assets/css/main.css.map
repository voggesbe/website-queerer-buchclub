{"version":3,"sourceRoot":"","sources":["../../_sass/jekyll-theme-prologue.scss","../../_sass/libs/_skel.scss","../../_sass/libs/_mixins.scss","banner.css","main.scss"],"names":[],"mappings":"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EAAA;EAAA;EAAA;EAAA;EDhFT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAEA;ECqES;EAAA;EAAA;EAAA;;ADjET;ECiES;EAAA;EAAA;EAAA;ED/DR;;AAEA;EACC;;AAIF;EACC;EACA;;AAEA;EACC;ECmDO;EAAA;EAAA;EAAA;;ADhDP;EACC;;;AAMJ;EACC;EACA;EACA;EACA;;AAEA;EACC;;AAGD;EACC;EACA;EACA;EACA;EACA;;AAGD;EACC;EACA;EACA;EACA;EACA;EACA;;AAGD;EACC;EACA;EACA;;;AAKD;EACC;EACA;;AACA;EACC;;AAIA;EACC;EACA;EACA;EACA;EACA;EACA;ECRM;EAAA;EAAA;EAAA;;ADWN;EACC;EACA;EACA;;AAEA;EACC;EACA;EACA;EACA;EACA;EACA;;AAIF;EACC;EACA;EACA;;AAEA;EACC;;;AAQP;AAEC;EACC;EACA;EACA;EACA;EACA;EACA;;AAEA;EACC;EACA;;AAEA;EACC;EACA;EACA;EACA;EACA;;AAEA;EACC;EACA;EACA;;;AAML;AAEC;EACC;;AACA;EACC;;AAED;EACC;;AAEC;EACC;;AAIH;EACC;EACA;EACA;EACA;EACA;;AAEA;EACC;EACA;;AAEA;EACC;;AAGD;EACC;EACA;;AAGD;EACC;EACA;;AAEA;EACC;;AAKH;EACC;EACA;EACA;;AACA;EACC;EACA;EACA;EACA;EACA;EACA;EACA;;AAIF;EACC;;AAGD;EACC;;AAGD;EACC;;AAGD;EACC;;;AAKJ;AC1gBQ;AD8gBN;EAEC;IACC;;AAGF;EAEC;IACC;;AAGF;EAEC;IACC;;AAGF;EAEC;IACC;;;AAKJ;ACxiBQ;AD4iBN;EAGE;IACC;;EAIA;IACC;;AAKJ;EAGG;IACC;;;AAMN;ACpkBQ;ADwkBN;EAEC;IACC;;EAGD;IACC;;AAGF;EAKI;IACC;;AAML;EAEC;IACC;;AAGF;EAEC;IACC;;EAIA;IACC;IACA;;EAKD;IACC;;EAEC;IACC;IACA;IACA;;EAEA;IACC;;EAEA;IACC;IACA;IACA;;AAQP;EAEC;IACC;;AAGF;EAEC;IACC;;;AAKJ;AAEC;EACC;;;ACzpBM;AD8pBN;EAEC;IACC;;EAGD;IACC;;EAIA;IACC;;EAKF;IACC;;AAGF;EAEC;IACC;;AAGF;EAIG;IACC;IACA;;AAKJ;EAEC;IChVQ;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IDoVP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EAEA;IACC;;EAGD;IACC;IACA;IACA;IACA;IACA;;EAIF;IACC;;EAIA;IACC;;EACA;IACC;;EAGA;IACC;;EAMJ;IChYQ;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IDmYP;IACA;IACA;IACA;IACA;IACA;IACA;;EAEA;IACC;IACA;IACA;IACA;IACA;IACA;IACA;;EAEA;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EAOD;IC/aM;IAAA;IAAA;IAAA;;EDmbN;ICnbM;IAAA;IAAA;IAAA;;EDubN;ICvbM;IAAA;IAAA;IAAA;;AD6bT;EAEC;IACC;;AAGF;EAEC;ICrcQ;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IDwcP;IACA;;EAEA;IACC;;EAIA;IACC;;;AAMN;AC70BQ;ADi1BN;EAEC;IACC;;EAGD;IACC;IACA;IACA;;EAGD;IACC;;AAGF;EAIG;IACC;IACA;;AAKJ;EAGE;IACC;;EAIA;IACC;;EAEA;IACC;;AAML;EAIG;IACC;IACA;IACA;IACA;IACA;;EAEA;IACC;;;AG9kCP;EACI;EACA;EACA;EACA;EACA;EACA;EACA;;;AAGF;AACA;EACE;;;ACTJ;EACE;;;AAEF;EACE;EACA;EACA;EACA;EACA;;;AAGF;EACE;EACA;EACA;EACA;EACA;EACA;;;AAGF;EACE;EACA;;;AAGF;EACE;EACA;EACA;;;AAGF;EACE;EACA;EACA;;;AAGF;EACE;EACA;EACA;;;AAGF;EACE","sourcesContent":["@import 'libs/vars';\n@import 'libs/functions';\n@import 'libs/mixins';\n@charset \"UTF-8\";\n@import url(\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,300italic,400,600\");\n\n/*\n\tPrologue by HTML5 UP\n\thtml5up.net | @ajlkn\n\tFree for personal and commercial use under the CCA 3.0 license (html5up.net/license)\n*/\n\n\t@import \"libs/skel\";\n\n\t@include skel-breakpoints((\n\t\twide: '(min-width: 961px) and (max-width: 1880px)',\n\t\tnormal: '(min-width: 961px) and (max-width: 1620px)',\n\t\tnarrow: '(min-width: 961px) and (max-width: 1320px)',\n\t\tnarrower: '(max-width: 960px)',\n\t\tmobile: '(max-width: 736px)'\n\t));\n\n\t@include skel-layout((\n\t\treset: 'full',\n\t\tboxModel: 'border',\n\t\tgrid: ( gutters: (40px, 40px) ),\n\t\tconditionals: true,\n\t\tcontainers: 1400px,\n\t\tbreakpoints: (\n\t\t\twide: (\n\t\t\t\tcontainers: 1200px,\n\t\t\t\tgrid: (\n\t\t\t\t\tgutters: (40px, 40px)\n\t\t\t\t),\n\t\t\t),\n\t\t\tnormal: (\n\t\t\t\tcontainers: 960px,\n\t\t\t\tgrid: (\n\t\t\t\t\tgutters: (40px, 40px)\n\t\t\t\t),\n\t\t\t),\n\t\t\tnarrow: (\n\t\t\t\tcontainers: 100%,\n\t\t\t\tgrid: (\n\t\t\t\t\tgutters: (20px, 20px)\n\t\t\t\t),\n\t\t\t),\n\t\t\tnarrower: (\n\t\t\t\tcontainers: 100%,\n\t\t\t\tgrid: (\n\t\t\t\t\tgutters: (20px, 20px)\n\t\t\t\t),\n\t\t\t),\n\t\t\tmobile: (\n\t\t\t\tcontainers: (100%, true),\n\t\t\t)\n\t\t)\n\t));\n\n/* Basic */\n\n\tbody {\n\t\tbackground: #fff;\n\t\tfont-family: 'Source Sans Pro', sans-serif;\n\t\tfont-size: 19pt;\n\t\tfont-weight: 300;\n\t\tline-height: 1.75em;\n\t\tcolor: #888;\n\n\t\t&.is-loading * {\n\t\t\t@include vendor('transition', 'none !important');\n\t\t\t@include vendor('animation', 'none !important');\n\t\t}\n\t}\n\n\tinput, textarea, select {\n\t\tfont-family: 'Source Sans Pro', sans-serif;\n\t\tfont-size: 19pt;\n\t\tfont-weight: 300;\n\t\tline-height: 1.75em;\n\t\tcolor: #888;\n\t}\n\n\th1, h2, h3, h4, h5, h6 {\n\t\tfont-weight: 300;\n\t\tcolor: #666;\n\t\tline-height: 1.5em;\n\t}\n\n\th1 a, h2 a, h3 a, h4 a, h5 a, h6 a {\n\t\tcolor: inherit;\n\t\ttext-decoration: none;\n\n\t\tstrong {\n\t\t\tcolor: #333;\n\t\t}\n\t}\n\n\th2 {\n\t\tfont-size: 2em;\n\t\tletter-spacing: -1px;\n\t}\n\n\th3 {\n\t\tfont-size: 1.5em;\n\t}\n\n\theader {\n\t\tmargin: 0 0 2em 0;\n\n\t\t> p {\n\t\t\tmargin: 1em 0 0 0;\n\t\t}\n\t}\n\n\tfooter {\n\t\tmargin: 2em 0 0 0;\n\t}\n\n\tstrong, b {\n\t\tfont-weight: 300;\n\t\tcolor: #666;\n\t}\n\n\tem, i {\n\t\tfont-style: italic;\n\t}\n\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: inherit;\n\t\tborder-bottom: dotted 1px rgba(128, 128, 128, 0.5);\n\t\t@include vendor('transition', ('color 0.35s ease-in-out', 'border-bottom-color 0.35s ease-in-out'));\n\t\toutline: 0;\n\n\t\t&:hover {\n\t\t\tcolor: #E27689;\n\t\t\tborder-bottom-color: rgba(255, 255, 255, 0);\n\t\t}\n\t}\n\n\tsub {\n\t\tposition: relative;\n\t\ttop: 0.5em;\n\t\tfont-size: 0.8em;\n\t}\n\n\tsup {\n\t\tposition: relative;\n\t\ttop: -0.5em;\n\t\tfont-size: 0.8em;\n\t}\n\n\thr {\n\t\tborder: 0;\n\t\tborder-top: solid 1px #41484c;\n\t}\n\n\tcode {\n\t\tbackground: rgba(0, 0, 0, 0.05);\n\t\tborder-color: rgba(0, 0, 0, 0.2);\n\t\tborder-radius: 4px;\n\t\tfont-family: \"Courier New\", monospace;\n\t\tfont-size: 0.9em;\n\t\tpadding: 0.25em 0.325em;\n\t}\n\n\tpre {\n\t\t-webkit-overflow-scrolling: touch;\n\t\tfont-family: \"Courier New\", monospace;\n\t\tfont-size: 0.9em;\n\t\ttab-size: 4;\n\t\tmargin: 0 0 2em 0;\n\t\tcode {\n\t\t\tdisplay: block;\n\t\t\tline-height: 1.5;\n\t\t\tpadding: 0.75em 1em;\n\t\t\toverflow-x: auto;\n\t\t}\n\t}\n\n\tblockquote {\n\t\tmargin-left: 1em;\n\t\tborder-left: solid 0.5em #ddd;\n\t\tpadding: 1em 0 1em 2em;\n\t\tfont-style: italic;\n\t}\n\n\tp, ul, ol, dl, table {\n\t\tmargin-bottom: 2em;\n\t}\n\n\tdl {\n\t\tdt {\n\t\t\tfont-weight: 300;\n\t\t\tcolor: #666;\n\t\t}\n\t\tdd {\n\t\t\tmargin-left: 1em\n\t\t}\n\t}\n\n\tbr.clear {\n\t\tclear: both;\n\t}\n\n/* Sections/Article */\n\n\tsection, article {\n\t\tmargin-bottom: 3em;\n\n\t\t> :last-child,\n\t\t> .container,\n\t\t&:last-child,\n\t\t> .container > :last-child {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\n\t\t.row > & {\n\t\t\tmargin-bottom: 0;\n\t\t}\n\n\t\t.row {\n\t\t\tmargin-top: 40px;\n\t\t}\n\n\t\t.row > * {\n\t\t\tpadding-top: 0;\n\t\t}\n\n\t\tul, ol {\n\t\t\tpadding-left: 0.25em;\n\t\t\tmargin-left: 1.25em;\n\t\t}\n\t}\n\n/* Image */\n\n\t.image {\n\t\tdisplay: inline-block;\n\t\tborder: 0;\n\n\t\timg {\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t&.avatar48 {\n\t\t\twidth: 48px;\n\t\t\theight: 48px;\n\t\t\tbackground: #f00;\n\n\t\t\timg {\n\t\t\t\twidth: 48px;\n\t\t\t\theight: 48px;\n\t\t\t}\n\t\t}\n\n\t\t&.fit {\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t&.featured {\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t\tmargin: 0 0 2em 0;\n\t\t}\n\n\t\t&.left {\n\t\t\tfloat: left;\n\t\t\tmargin: 0 2em 2em 0;\n\t\t}\n\n\t\t&.right {\n\t\t\tfloat: right;\n\t\t\tmargin: 0 0 2em 2em;\n\t\t}\n\n\t\t&.centered {\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 0 2em 0;\n\n\t\t\timg {\n\t\t\t\tmargin: 0 auto;\n\t\t\t\twidth: auto;\n\t\t\t}\n\t\t}\n\t}\n\n/* List */\n\n\tul {\n\t\tlist-style: disc;\n\n\t\t&.icons {\n\t\t\tcursor: default;\n\n\t\t\tli {\n\t\t\t\tdisplay: inline-block;\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 2em;\n\t\t\t\theight: 2em;\n\t\t\t\tline-height: 2em;\n\t\t\t\ttext-align: center;\n\t\t\t\tborder: 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tol {\n\t\tlist-style: decimal;\n\t}\n\n/* Form */\n\n\tform {\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\ttext-align: left;\n\t\t\tmargin-bottom: 0.5em;\n\t\t}\n\n\t\tinput[type=\"text\"],\n\t\tinput[type=\"email\"],\n\t\tinput[type=\"password\"],\n\t\tselect,\n\t\ttextarea {\n\t\t\tposition: relative;\n\t\t\t-webkit-appearance: none;\n\t\t\tdisplay: block;\n\t\t\tborder: 0;\n\t\t\toutline: 0;\n\t\t\tbackground: #fff;\n\t\t\tbackground: rgba(255, 255, 255, 0.75);\n\t\t\twidth: 100%;\n\t\t\tborder-radius: 0.35em;\n\t\t\tpadding: 0.75em 1em 0.75em 1em;\n\t\t\tbox-shadow: inset 0 0.1em 0.1em 0 rgba(0, 0, 0, 0.05);\n\t\t\tborder: solid 1px rgba(0, 0, 0, 0.15);\n\t\t\t@include vendor('transition', 'all 0.35s ease-in-out');\n\n\t\t\t&:focus {\n\t\t\t\tbox-shadow: 0 0 2px 1px #8ebebc;\n\t\t\t\tbackground: #fff;\n\t\t\t}\n\t\t}\n\n\t\tinput[type=\"text\"],\n\t\tinput[type=\"email\"],\n\t\tinput[type=\"password\"],\n\t\tselect {\n\t\t\tline-height: 1.25em;\n\t\t}\n\n\t\ttextarea {\n\t\t\tmin-height: 14em;\n\t\t}\n\n\t\t.formerize-placeholder {\n\t\t\tcolor: #555 !important;\n\t\t}\n\n\t\t::-webkit-input-placeholder {\n\t\t\tcolor: #555 !important;\n\t\t}\n\n\t\t:-moz-placeholder {\n\t\t\tcolor: #555 !important;\n\t\t}\n\n\t\t::-moz-placeholder {\n\t\t\tcolor: #555 !important;\n\t\t}\n\n\t\t:-ms-input-placeholder {\n\t\t\tcolor: #555 !important;\n\t\t}\n\n\t\t::-moz-focus-inner {\n\t\t\tborder: 0;\n\t\t}\n\t}\n\n/* Table */\n\n\ttable {\n\t\twidth: 100%;\n\t\ttext-align: left;\n\n\t\ttbody {\n\t\t\ttr {\n\t\t\t\t&:nth-child(2n+2) {\n\t\t\t\t\tbackground: #f4f4f4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttd {\n\t\t\tpadding: 0.5em 1em 0.5em 1em;\n\t\t}\n\n\t\tth {\n\t\t\ttext-align: left;\n\t\t\tpadding: 0.5em 1em 0.5em 1em;\n\t\t\tcolor: #fff;\n\t\t\tbackground: #222729 url('images/overlay.png');\n\t\t}\n\n\t\tthead {\n\t\t\tbackground: #444;\n\t\t\tcolor: #fff;\n\t\t}\n\n\t\ttfoot {\n\t\t\tbackground: #eee;\n\t\t}\n\t}\n\n/* Button */\n\n\tinput[type=\"button\"],\n\tinput[type=\"submit\"],\n\tinput[type=\"reset\"],\n\tbutton,\n\t.button {\n\t\tposition: relative;\n\t\tdisplay: inline-block;\n\t\tborder-radius: 0.35em;\n\t\tcolor: #fff !important;\n\t\ttext-decoration: none;\n\t\tpadding: 0.75em 2.5em 0.75em 2.5em;\n\t\tbackground-color: #8ebebc;\n\t\tborder: 0;\n\t\tcursor: pointer;\n\t\t@include vendor('background-image', ('linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15))', 'url(\"images/overlay.png\")'));\n\t\t@include vendor('transition', 'background-color 0.35s ease-in-out');\n\n\t\t&:hover {\n\t\t\tbackground-color: #9ececc;\n\t\t}\n\n\t\t&:active {\n\t\t\tbackground-color: #7eaeac;\n\t\t}\n\t}\n\n/* Item */\n\n\t.item {\n\t\tbox-shadow: 0 0.05em 0.15em 0 rgba(0, 0, 0, 0.05);\n\t\tmargin-bottom: 40px;\n\n\t\theader {\n\t\t\tcolor: #666;\n\t\t\ttext-align: center;\n\t\t\tbackground: #fff;\n\t\t\tmargin: 0;\n\t\t\tpadding: 1em;\n\t\t\tfont-size: 0.8em;\n\n\t\t\th3 {\n\t\t\t\tfont-size: 1em;\n\t\t\t}\n\t\t}\n\t}\n\n/* Icons */\n\n\t.icon {\n\t\t@include icon(before);\n\t}\n\n\t.icon-r {\n\t\t@include icon(before, regular);\n\t}\n\n\t.icon-b {\n\t\t@include icon(before, brands);\n\t}\n\n/* Header */\n\n\t#header {\n\t\t@include vendor('display', 'flex');\n\t\t@include vendor('flex-direction', 'column');\n\t\t@include vendor('justify-content', 'space-between');\n\t\tbackground: #222629 url('images/overlay.png');\n\t\tbox-shadow: inset -0.25em 0 0.25em 0 rgba(0, 0, 0, 0.1);\n\t\tcolor: #fff;\n\t\theight: 100%;\n\t\tleft: 0;\n\t\toverflow-y: auto;\n\t\tposition: fixed;\n\t\ttext-align: right;\n\t\ttop: 0;\n\t\twidth: 375px;\n\n\t\t.top {\n\t\t\t@include vendor('flex-grow', '1');\n\t\t}\n\n\t\t.bottom {\n\t\t\t@include vendor('flex-shrink', '0');\n\t\t\tpadding: 1.5em 0 0.75em 0;\n\n\t\t\t> :last-child {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\t\t}\n\n\t\t.icons {\n\t\t\tfont-size: 0.8em;\n\t\t\ttext-align: center;\n\n\t\t\ta {\n\t\t\t\tcolor: #41484c;\n\t\t\t\t@include vendor('transition', 'color 0.35s ease-in-out');\n\n\t\t\t\t&:hover {\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t#logo {\n\t\tposition: relative;\n\t\tmargin: 1.75em 1.5em 1.5em 1.5em;\n\t\tmin-height: 48px;\n\t\tcursor: default;\n\n\t\ta {\n\t\t\tborder: 0;\n\t\t}\n\n\t\th1 {\n\t\t\tposition: relative;\n\t\t\tcolor: #fff;\n\t\t\tfont-weight: 600;\n\t\t\tfont-size: 1em;\n\t\t\tline-height: 1em;\n\t\t}\n\n\t\tp {\n\t\t\tposition: relative;\n\t\t\tdisplay: block;\n\t\t\tfont-size: 0.6em;\n\t\t\tcolor: rgba(255, 255, 255, 0.5);\n\t\t\tline-height: 1.25em;\n\t\t\tmargin: 0.5em 0 0 0;\n\t\t}\n\n\t\t.image {\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\ttop: 0;\n\t\t}\n\t}\n\n\t#nav {\n\t\tul {\n\t\t\tlist-style: none;\n\t\t\tmargin-bottom: 0;\n\t\t\thr {\n\t\t\t\tmargin: auto 1.5em;\n\t\t\t}\n\n\t\t\tli {\n\t\t\t\ta {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tpadding: 0.5em 1.5em 0.5em 1.5em;\n\t\t\t\t\tcolor: rgba(255, 255, 255, 0.5);\n\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\toutline: 0;\n\t\t\t\t\tborder: 0;\n\t\t\t\t\t@include vendor('transition', 'none');\n\n\t\t\t\t\tspan {\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\tfont-size: 0.8em;\n\n\t\t\t\t\t\t&::before {\n\t\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\t\tleft: 0;\n\t\t\t\t\t\t\tcolor: #41484c;\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\twidth: 1.25em;\n\t\t\t\t\t\t\tline-height: 1.75em;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t&.active {\n\t\t\t\t\t\tbackground: rgba(0, 0, 0, 0.15);\n\t\t\t\t\t\tbox-shadow: inset 0 0 0.25em 0 rgba(0, 0, 0, 0.125);\n\t\t\t\t\t\tcolor: #fff;\n\n\t\t\t\t\t\tspan::before {\n\t\t\t\t\t\t\tcolor: #e27689;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n/* Footer */\n\n\t#footer {\n\t\tmargin-left: 375px;\n\t\ttext-align: center;\n\t\tbackground-color: #dce3e2;\n\t\tpadding: 3em 0 4em 0;\n\t\tbox-shadow: inset 0 1px 0 0 rgba(0, 0, 0, 0.05), inset 0 0.1em 0.1em 0 rgba(0, 0, 0, 0.025);\n\t\tfont-size: 0.8em;\n\n\t\t.copyright {\n\t\t\tcursor: default;\n\t\t\tmargin: 0;\n\n\t\t\tli {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tline-height: 1em;\n\t\t\t\tborder-left: solid 1px rgba(128, 128, 128, 0.35);\n\t\t\t\tpadding: 0 0 0 0.5em;\n\t\t\t\tmargin: 0 0 0 0.5em;\n\n\t\t\t\t&:first-child {\n\t\t\t\t\tborder-left: 0;\n\t\t\t\t\tpadding-left: 0;\n\t\t\t\t\tmargin-left: 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n/* Main */\n\n\t#main {\n\t\tmargin-left: 375px;\n\t\t> section {\n\t\t\ttext-align: center;\n\t\t}\n\t\t> article {\n\t\t\ttext-align: left;\n\t\t\theader {\n\t\t\t\tp {\n\t\t\t\t\tfont-style: italic;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t> section, article {\n\t\t\tmargin: 0;\n\t\t\toverflow: hidden;\n\t\t\tpadding: 4em 0;\n\t\t\tbox-shadow: inset 0 1px 0 0 rgba(0, 0, 0, 0.05), inset 0 0.1em 0.1em 0 rgba(0, 0, 0, 0.025);\n\t\t\tbackground-image: url('images/overlay.png');\n\n\t\t\t&.dark {\n\t\t\t\tcolor: #ddd;\n\t\t\t\tcolor: rgba(255, 255, 255, 0.75);\n\n\t\t\t\th2, h3, h4, h5, h6 {\n\t\t\t\t\tcolor: inherit;\n\t\t\t\t}\n\n\t\t\t\tstrong {\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tborder-color: inherit;\n\t\t\t\t}\n\n\t\t\t\ta {\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tborder-color: inherit;\n\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tborder-bottom-color: rgba(255, 255, 255, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.cover {\n\t\t\t\tpadding: 6em 0;\n\t\t\t\tposition: relative;\n\t\t\t\tz-index: 0;\n\t\t\t\timg.back {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tobject-fit: cover;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tz-index: -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.shade-one {\n\t\t\t\tbackground-color: #81918E;\n\t\t\t}\n\n\t\t\t&.shade-two {\n\t\t\t\tbackground-color: #f5fafa;\n\t\t\t}\n\n\t\t\t&.shade-three {\n\t\t\t\tbackground-color: #ecf1f1;\n\t\t\t}\n\n\t\t\t&.shade-four {\n\t\t\t\tbackground-color: #e8edec;\n\t\t\t}\n\t\t}\n\t}\n\n/* Wide */\n\n\t@include breakpoint(wide) {\n\n\t\t/* Basic */\n\n\t\t\tbody, input, textarea, select {\n\t\t\t\tfont-size: 17pt;\n\t\t\t}\n\n\t\t/* Header */\n\n\t\t\t#header {\n\t\t\t\twidth: 300px;\n\t\t\t}\n\n\t\t/* Footer */\n\n\t\t\t#footer {\n\t\t\t\tmargin-left: 300px;\n\t\t\t}\n\n\t\t/* Main */\n\n\t\t\t#main {\n\t\t\t\tmargin-left: 300px;\n\t\t\t}\n\n\t}\n\n/* Normal */\n\n\t@include breakpoint(normal) {\n\n\t\t/* Main */\n\n\t\t\t#main {\n\t\t\t\t> section, article {\n\t\t\t\t\tpadding: 3em 0;\n\t\t\t\t}\n\n\t\t\t\tsection {\n\t\t\t\t\t&.cover {\n\t\t\t\t\t\tpadding: 5em 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* Header */\n\t\t\t#nav {\n\t\t\t\tul {\n\t\t\t\t\thr {\n\t\t\t\t\t\tmargin: auto 1.25em;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t}\n\n/* Narrow */\n\n\t@include breakpoint(narrow) {\n\n\t\t/* Basic */\n\n\t\t\tbody, input, textarea, select {\n\t\t\t\tfont-size: 16pt;\n\t\t\t}\n\n\t\t\t.container {\n\t\t\t\tpadding: 0 2em 0 2em;\n\t\t\t}\n\n\t\t/* List */\n\n\t\t\tul {\n\t\t\t\t&.icons {\n\t\t\t\t\tli {\n\t\t\t\t\t\ta {\n\t\t\t\t\t\t\twidth: 1.75em;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* Item */\n\n\t\t\t.item {\n\t\t\t\tmargin-bottom: 20px;\n\t\t\t}\n\n\t\t/* Header */\n\n\t\t\t#header {\n\t\t\t\twidth: 20%;\n\t\t\t}\n\n\t\t\t#logo {\n\t\t\t\t.image {\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tmargin: 0 0 0.5em 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t#nav {\n\t\t\t\tul {\n\t\t\t\t\tlist-style: none;\n\t\t\t\t\tli {\n\t\t\t\t\t\ta {\n\t\t\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\t\t\tpadding-top: 0.5em;\n\t\t\t\t\t\t\tpadding-bottom: 0.5em;\n\n\t\t\t\t\t\t\tspan {\n\t\t\t\t\t\t\t\tpadding-right: 2.25em;\n\n\t\t\t\t\t\t\t\t&::before {\n\t\t\t\t\t\t\t\t\tleft: 100%;\n\t\t\t\t\t\t\t\t\tmargin-left: -1.25em;\n\t\t\t\t\t\t\t\t\tline-height: 2.25em;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* Footer */\n\n\t\t\t#footer {\n\t\t\t\tmargin-left: 20%;\n\t\t\t}\n\n\t\t/* Main */\n\n\t\t\t#main {\n\t\t\t\tmargin-left: 20%;\n\t\t\t}\n\n\t}\n\n/* Narrower */\n\n\t#headerToggle {\n\t\tdisplay: none;\n\t}\n\n\t@include breakpoint(narrower) {\n\n\t\t/* Basic */\n\n\t\t\thtml, body {\n\t\t\t\toverflow-x: hidden;\n\t\t\t}\n\n\t\t\tbody, input, textarea, select {\n\t\t\t\tfont-size: 16pt;\n\t\t\t}\n\n\t\t\theader {\n\t\t\t\tbr {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t.container {\n\t\t\t\tpadding: 0 2em 0 2em;\n\t\t\t}\n\n\t\t/* Item */\n\n\t\t\t.item {\n\t\t\t\tmargin-bottom: 15px;\n\t\t\t}\n\n\t\t/* List */\n\n\t\t\tul {\n\t\t\t\t&.icons {\n\t\t\t\t\ta {\n\t\t\t\t\t\twidth: 1.75em;\n\t\t\t\t\t\tfont-size: 1.25em;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* Header */\n\n\t\t\t#header {\n\t\t\t\t@include vendor('backface-visibility', 'hidden');\n\t\t\t\t@include vendor('transform', 'translateX(#{_size(header) * -1})');\n\t\t\t\t@include vendor('transition', ('transform #{_duration(header)} ease'));\n\t\t\t\t-webkit-overflow-scrolling: touch;\n\t\t\t\tdisplay: block;\n\t\t\t\theight: 100%;\n\t\t\t\tleft: 0;\n\t\t\t\toverflow-y: auto;\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: _size(header);\n\t\t\t\tz-index: _misc(z-index-base) + 2;\n\t\t\t\twidth: _size(header);\n\t\t\t\tbackground: #222729 url('images/overlay.png');\n\t\t\t\tbox-shadow: inset -0.25em 0 0.25em 0 rgba(0, 0, 0, 0.125);\n\n\t\t\t\t.top {\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\n\t\t\t\t.bottom {\n\t\t\t\t\tborder-top: solid 1px rgba(255, 255, 255, 0.05);\n\t\t\t\t\tbox-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.15);\n\t\t\t\t\tpadding-top: 2em;\n\t\t\t\t\tmargin-top: 2em;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t#logo {\n\t\t\t\tmargin: 1.5em 1.25em 1.25em 1.25em;\n\t\t\t}\n\n\t\t\t#nav {\n\t\t\t\tul {\n\t\t\t\t\tlist-style: none;\n\t\t\t\t\thr {\n\t\t\t\t\t\tmargin: auto 1.25em;\n\t\t\t\t\t}\n\t\t\t\t\tli {\n\t\t\t\t\t\ta {\n\t\t\t\t\t\t\tpadding: 0.5em 1.25em 0.5em 1.25em;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t#headerToggle {\n\t\t\t\t@include vendor('backface-visibility', 'hidden');\n\t\t\t\t@include vendor('transition', 'transform #{_duration(header)} ease');\n\t\t\t\tdisplay: block;\n\t\t\t\theight: 2.25em;\n\t\t\t\tleft: 0;\n\t\t\t\tposition: fixed;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: 3.25em;\n\t\t\t\tz-index: _misc(z-index-base) + 1;\n\n\t\t\t\t.toggle {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tleft: 0;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\toutline: 0;\n\t\t\t\t\tborder: 0;\n\n\t\t\t\t\t&::before {\n\t\t\t\t\t\tfont-family: \"Font Awesome 5 Free\";\n\t\t\t\t\t\ttext-decoration: none;\n\t\t\t\t\t\tfont-style: normal;\n\t\t\t\t\t\tfont-weight: 900;\n\t\t\t\t\t\t-webkit-font-smoothing: antialiased;\n\t\t\t\t\t\t-moz-osx-font-smoothing: grayscale;\n\t\t\t\t\t\tcontent: '\\f0c9';\n\t\t\t\t\t\tcolor: #fff;\n\t\t\t\t\t\tfont-size: 18px;\n\t\t\t\t\t\tline-height: 2.25em;\n\t\t\t\t\t\tbackground: rgba(128, 136, 144, 0.5);\n\t\t\t\t\t\tborder-radius: 0.35em;\n\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tleft: 0.5em;\n\t\t\t\t\t\ttop: 0.5em;\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\twidth: 3.25em;\n\t\t\t\t\t\theight: 2.25em;\n\t\t\t\t\t\tline-height: 2.25em;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\t&.header-visible {\n\t\t\t\t\t#main {\n\t\t\t\t\t\t@include vendor('transform', 'translateX(#{_size(header)})');\n\t\t\t\t\t}\n\n\t\t\t\t\t#headerToggle {\n\t\t\t\t\t\t@include vendor('transform', 'translateX(#{_size(header)})');\n\t\t\t\t\t}\n\n\t\t\t\t\t#header {\n\t\t\t\t\t\t@include vendor('transform', 'translateX(0)');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* Footer */\n\n\t\t\t#footer {\n\t\t\t\tmargin-left: 0;\n\t\t\t}\n\n\t\t/* Main */\n\n\t\t\t#main {\n\t\t\t\t@include vendor('backface-visibility', 'hidden');\n\t\t\t\t@include vendor('transition', 'transform #{_duration(header)} ease');\n\t\t\t\tpadding-bottom: 1px;\n\t\t\t\tmargin-left: 0;\n\n\t\t\t\t> section, article {\n\t\t\t\t\tpadding: 3em 0;\n\t\t\t\t}\n\n\t\t\t\tsection {\n\t\t\t\t\t&.cover {\n\t\t\t\t\t\tpadding: 4em 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t}\n\n/* Mobile */\n\n\t@include breakpoint(mobile) {\n\n\t\t/* Basic */\n\n\t\t\tbody, input, textarea, select {\n\t\t\t\tfont-size: 14pt;\n\t\t\t}\n\n\t\t\th2 {\n\t\t\t\tfont-size: 1.5em;\n\t\t\t\tletter-spacing: 0;\n\t\t\t\tfont-weight: 300;\n\t\t\t}\n\n\t\t\t.container {\n\t\t\t\tpadding: 0 15px 0 15px;\n\t\t\t}\n\n\t\t/* List */\n\n\t\t\tul {\n\t\t\t\t&.icons {\n\t\t\t\t\ta {\n\t\t\t\t\t\twidth: 2em;\n\t\t\t\t\t\tfont-size: 1.25em;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* Main */\n\n\t\t\t#main {\n\t\t\t\t> section, article {\n\t\t\t\t\tpadding: 2em 0;\n\t\t\t\t}\n\n\t\t\t\tsection {\n\t\t\t\t\t&.cover {\n\t\t\t\t\t\tpadding: 4em 0em;\n\n\t\t\t\t\t\theader {\n\t\t\t\t\t\t\tpadding: 0 1em;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t/* Footer */\n\n\t\t\t#footer {\n\t\t\t\t.copyright {\n\t\t\t\t\tli {\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\tline-height: 1.25em;\n\t\t\t\t\t\tborder: 0;\n\t\t\t\t\t\tpadding: 0;\n\t\t\t\t\t\tmargin: 1em 0 0 0;\n\n\t\t\t\t\t\t&:first-child {\n\t\t\t\t\t\t\tmargin-top: 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t}","// skel.scss v3.0.2-dev | (c) skel.io | MIT licensed */\r\n\r\n// Vars.\r\n\r\n\t/// Breakpoints.\r\n\t/// @var {list}\r\n\t$breakpoints: () !global;\r\n\r\n\t/// Vendor prefixes.\r\n\t/// @var {list}\r\n\t$vendor-prefixes: (\r\n\t\t'-moz-',\r\n\t\t'-webkit-',\r\n\t\t'-ms-',\r\n\t\t''\r\n\t);\r\n\r\n\t/// Properties that should be vendorized.\r\n\t/// @var {list}\r\n\t$vendor-properties: (\r\n\t\t'align-content',\r\n\t\t'align-items',\r\n\t\t'align-self',\r\n\t\t'animation',\r\n\t\t'animation-delay',\r\n\t\t'animation-direction',\r\n\t\t'animation-duration',\r\n\t\t'animation-fill-mode',\r\n\t\t'animation-iteration-count',\r\n\t\t'animation-name',\r\n\t\t'animation-play-state',\r\n\t\t'animation-timing-function',\r\n\t\t'appearance',\r\n\t\t'backface-visibility',\r\n\t\t'box-sizing',\r\n\t\t'filter',\r\n\t\t'flex',\r\n\t\t'flex-basis',\r\n\t\t'flex-direction',\r\n\t\t'flex-flow',\r\n\t\t'flex-grow',\r\n\t\t'flex-shrink',\r\n\t\t'flex-wrap',\r\n\t\t'justify-content',\r\n\t\t'object-fit',\r\n\t\t'object-position',\r\n\t\t'order',\r\n\t\t'perspective',\r\n\t\t'pointer-events',\r\n\t\t'transform',\r\n\t\t'transform-origin',\r\n\t\t'transform-style',\r\n\t\t'transition',\r\n\t\t'transition-delay',\r\n\t\t'transition-duration',\r\n\t\t'transition-property',\r\n\t\t'transition-timing-function',\r\n\t\t'user-select'\r\n\t);\r\n\r\n\t/// Values that should be vendorized.\r\n\t/// @var {list}\r\n\t$vendor-values: (\r\n\t\t'filter',\r\n\t\t'flex',\r\n\t\t'linear-gradient',\r\n\t\t'radial-gradient',\r\n\t\t'transform'\r\n\t);\r\n\r\n// Functions.\r\n\r\n\t/// Removes a specific item from a list.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {list} $list List.\r\n\t/// @param {integer} $index Index.\r\n\t/// @return {list} Updated list.\r\n\t@function remove-nth($list, $index) {\r\n\r\n\t\t$result: null;\r\n\r\n\t\t@if type-of($index) != number {\r\n\t\t\t@warn \"$index: #{quote($index)} is not a number for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else if $index == 0 {\r\n\t\t\t@warn \"List index 0 must be a non-zero integer for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else if abs($index) > length($list) {\r\n\t\t\t@warn \"List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else {\r\n\r\n\t\t\t$result: ();\r\n\t\t\t$index: if($index < 0, length($list) + $index + 1, $index);\r\n\r\n\t\t\t@for $i from 1 through length($list) {\r\n\r\n\t\t\t\t@if $i != $index {\r\n\t\t\t\t\t$result: append($result, nth($list, $i));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t@return $result;\r\n\r\n\t}\r\n\r\n\t/// Replaces a substring within another string.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {string} $string String.\r\n\t/// @param {string} $search Substring.\r\n\t/// @param {string} $replace Replacement.\r\n\t/// @return {string} Updated string.\r\n\t@function str-replace($string, $search, $replace: '') {\r\n\r\n\t\t$index: str-index($string, $search);\r\n\r\n\t\t@if $index {\r\n\t\t\t@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n\t\t}\r\n\r\n\t\t@return $string;\r\n\r\n\t}\r\n\r\n\t/// Replaces a substring within each string in a list.\r\n\t/// @param {list} $strings List of strings.\r\n\t/// @param {string} $search Substring.\r\n\t/// @param {string} $replace Replacement.\r\n\t/// @return {list} Updated list of strings.\r\n\t@function str-replace-all($strings, $search, $replace: '') {\r\n\r\n\t\t@each $string in $strings {\r\n\t\t\t$strings: set-nth($strings, index($strings, $string), str-replace($string, $search, $replace));\r\n\t\t}\r\n\r\n\t\t@return $strings;\r\n\r\n\t}\r\n\r\n\t/// Gets a value from a map.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {map} $map Map.\r\n\t/// @param {string} $keys Key(s).\r\n\t/// @return {string} Value.\r\n\t@function val($map, $keys...) {\r\n\r\n\t\t@if nth($keys, 1) == null {\r\n\t\t\t$keys: remove-nth($keys, 1);\r\n\t\t}\r\n\r\n\t\t@each $key in $keys {\r\n\t\t\t$map: map-get($map, $key);\r\n\t\t}\r\n\r\n\t\t@return $map;\r\n\r\n\t}\r\n\r\n// Mixins.\r\n\r\n\t/// Sets the global box model.\r\n\t/// @param {string} $model Model (default is content).\r\n\t@mixin boxModel($model: 'content') {\r\n\r\n\t\t$x: $model + '-box';\r\n\r\n\t\t*, *:before, *:after {\r\n\t\t\t-moz-box-sizing: #{$x};\r\n\t\t\t-webkit-box-sizing: #{$x};\r\n\t\t\tbox-sizing: #{$x};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in a @media block using a given breakpoint.\r\n\t/// @param {string} $breakpoint Breakpoint.\r\n\t/// @param {map} $queries Additional queries.\r\n\t@mixin breakpoint($breakpoint: null, $queries: null) {\r\n\r\n\t\t$query: 'screen';\r\n\r\n\t\t// Breakpoint.\r\n\t\t\t@if $breakpoint and map-has-key($breakpoints, $breakpoint) {\r\n\t\t\t\t$query: $query + ' and ' + map-get($breakpoints, $breakpoint);\r\n\t\t\t}\r\n\r\n\t\t// Queries.\r\n\t\t\t@if $queries {\r\n\t\t\t\t@each $k, $v in $queries {\r\n\t\t\t\t\t$query: $query + ' and (' + $k + ':' + $v + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n        @media #{$query} {\r\n            @content;\r\n        }\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in a @media block targeting a specific orientation.\r\n\t/// @param {string} $orientation Orientation.\r\n\t@mixin orientation($orientation) {\r\n\t\t@media screen and (orientation: #{$orientation}) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t/// Utility mixin for containers.\r\n\t/// @param {mixed} $width Width.\r\n\t@mixin containers($width) {\r\n\r\n\t\t// Locked?\r\n\t\t\t$lock: false;\r\n\r\n\t\t\t@if length($width) == 2 {\r\n\t\t\t\t$width: nth($width, 1);\r\n\t\t\t\t$lock: true;\r\n\t\t\t}\r\n\r\n\t\t// Modifiers.\r\n\t\t\t.container.\\31 25\\25\t\t{ width: 100%; max-width: $width * 1.25; min-width: $width; }\r\n\t\t\t.container.\\37 5\\25\t\t\t{ width: $width * 0.75; }\r\n\t\t\t.container.\\35 0\\25\t\t\t{ width: $width * 0.5; }\r\n\t\t\t.container.\\32 5\\25\t\t\t{ width: $width * 0.25; }\r\n\r\n\t\t// Main class.\r\n\t\t\t.container {\r\n\t\t\t\t@if $lock {\r\n\t\t\t\t\twidth: $width !important;\r\n\t\t\t\t}\r\n\t\t\t\t@else {\r\n\t\t\t\t\twidth: $width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\t/// Utility mixin for grid.\r\n\t/// @param {list} $gutters Column and row gutters (default is 40px).\r\n\t/// @param {string} $breakpointName Optional breakpoint name.\r\n\t@mixin grid($gutters: 40px, $breakpointName: null) {\r\n\r\n\t\t// Gutters.\r\n\t\t\t@include grid-gutters($gutters);\r\n\t\t\t@include grid-gutters($gutters, \\32 00\\25, 2);\r\n\t\t\t@include grid-gutters($gutters, \\31 50\\25, 1.5);\r\n\t\t\t@include grid-gutters($gutters, \\35 0\\25, 0.5);\r\n\t\t\t@include grid-gutters($gutters, \\32 5\\25, 0.25);\r\n\r\n\t\t// Cells.\r\n\t\t\t$x: '';\r\n\r\n\t\t\t@if $breakpointName {\r\n\t\t\t\t$x: '\\\\28' + $breakpointName + '\\\\29';\r\n\t\t\t}\r\n\r\n\t\t\t.\\31 2u#{$x}, .\\31 2u\\24#{$x} { width: 100%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 1u#{$x}, .\\31 1u\\24#{$x} { width: 91.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 0u#{$x}, .\\31 0u\\24#{$x} { width: 83.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\39 u#{$x}, .\\39 u\\24#{$x} { width: 75%; clear: none; margin-left: 0; }\r\n\t\t\t.\\38 u#{$x}, .\\38 u\\24#{$x} { width: 66.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\37 u#{$x}, .\\37 u\\24#{$x} { width: 58.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\36 u#{$x}, .\\36 u\\24#{$x} { width: 50%; clear: none; margin-left: 0; }\r\n\t\t\t.\\35 u#{$x}, .\\35 u\\24#{$x} { width: 41.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\34 u#{$x}, .\\34 u\\24#{$x} { width: 33.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\33 u#{$x}, .\\33 u\\24#{$x} { width: 25%; clear: none; margin-left: 0; }\r\n\t\t\t.\\32 u#{$x}, .\\32 u\\24#{$x} { width: 16.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 u#{$x}, .\\31 u\\24#{$x} { width: 8.3333333333%; clear: none; margin-left: 0; }\r\n\r\n\t\t\t.\\31 2u\\24#{$x} + *,\r\n\t\t\t.\\31 1u\\24#{$x} + *,\r\n\t\t\t.\\31 0u\\24#{$x} + *,\r\n\t\t\t.\\39 u\\24#{$x} + *,\r\n\t\t\t.\\38 u\\24#{$x} + *,\r\n\t\t\t.\\37 u\\24#{$x} + *,\r\n\t\t\t.\\36 u\\24#{$x} + *,\r\n\t\t\t.\\35 u\\24#{$x} + *,\r\n\t\t\t.\\34 u\\24#{$x} + *,\r\n\t\t\t.\\33 u\\24#{$x} + *,\r\n\t\t\t.\\32 u\\24#{$x} + *,\r\n\t\t\t.\\31 u\\24#{$x} + * {\r\n\t\t\t\tclear: left;\r\n\t\t\t}\r\n\r\n\t\t\t.\\-11u#{$x} { margin-left: 91.6666666667% }\r\n\t\t\t.\\-10u#{$x} { margin-left: 83.3333333333% }\r\n\t\t\t.\\-9u#{$x} { margin-left: 75% }\r\n\t\t\t.\\-8u#{$x} { margin-left: 66.6666666667% }\r\n\t\t\t.\\-7u#{$x} { margin-left: 58.3333333333% }\r\n\t\t\t.\\-6u#{$x} { margin-left: 50% }\r\n\t\t\t.\\-5u#{$x} { margin-left: 41.6666666667% }\r\n\t\t\t.\\-4u#{$x} { margin-left: 33.3333333333% }\r\n\t\t\t.\\-3u#{$x} { margin-left: 25% }\r\n\t\t\t.\\-2u#{$x} { margin-left: 16.6666666667% }\r\n\t\t\t.\\-1u#{$x} { margin-left: 8.3333333333% }\r\n\r\n\t}\r\n\r\n\t/// Utility mixin for grid.\r\n\t/// @param {list} $gutters Gutters.\r\n\t/// @param {string} $class Optional class name.\r\n\t/// @param {integer} $multiplier Multiplier (default is 1).\r\n\t@mixin grid-gutters($gutters, $class: null, $multiplier: 1) {\r\n\r\n\t\t// Expand gutters if it's not a list.\r\n\t\t\t@if length($gutters) == 1 {\r\n\t\t\t\t$gutters: ($gutters, 0);\r\n\t\t\t}\r\n\r\n\t\t// Get column and row gutter values.\r\n\t\t\t$c: nth($gutters, 1);\r\n\t\t\t$r: nth($gutters, 2);\r\n\r\n\t\t// Get class (if provided).\r\n\t\t\t$x: '';\r\n\r\n\t\t\t@if $class {\r\n\t\t\t\t$x: '.' + $class;\r\n\t\t\t}\r\n\r\n\t\t// Default.\r\n\t\t\t.row#{$x} > * { padding: ($r * $multiplier) 0 0 ($c * $multiplier); }\r\n\t\t\t.row#{$x} { margin: ($r * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\r\n\r\n\t\t// Uniform.\r\n\t\t\t.row.uniform#{$x} > * { padding: ($c * $multiplier) 0 0 ($c * $multiplier); }\r\n\t\t\t.row.uniform#{$x} { margin: ($c * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in vendorized keyframe blocks.\r\n\t/// @param {string} $name Name.\r\n\t@mixin keyframes($name) {\r\n\r\n\t\t@-moz-keyframes #{$name} { @content; }\r\n\t\t@-webkit-keyframes #{$name} { @content; }\r\n\t\t@-ms-keyframes #{$name} { @content; }\r\n\t\t@keyframes #{$name} { @content; }\r\n\r\n\t}\r\n\r\n\t///\r\n\t/// Sets breakpoints.\r\n\t/// @param {map} $x Breakpoints.\r\n\t///\r\n\t@mixin skel-breakpoints($x: ()) {\r\n\t\t$breakpoints: $x !global;\r\n\t}\r\n\r\n\t///\r\n\t/// Initializes layout module.\r\n\t/// @param {map} config Config.\r\n\t///\r\n\t@mixin skel-layout($config: ()) {\r\n\r\n\t\t// Config.\r\n\t\t\t$configPerBreakpoint: ();\r\n\r\n\t\t\t$z: map-get($config, 'breakpoints');\r\n\r\n\t\t\t@if $z {\r\n\t\t\t\t$configPerBreakpoint: $z;\r\n\t\t\t}\r\n\r\n\t\t// Reset.\r\n\t\t\t$x: map-get($config, 'reset');\r\n\r\n\t\t\t@if $x {\r\n\r\n\t\t\t\t/* Reset */\r\n\r\n\t\t\t\t@include reset($x);\r\n\r\n\t\t\t}\r\n\r\n\t\t// Box model.\r\n\t\t\t$x: map-get($config, 'boxModel');\r\n\r\n\t\t\t@if $x {\r\n\r\n\t\t\t\t/* Box Model */\r\n\r\n\t\t\t\t@include boxModel($x);\r\n\r\n\t\t\t}\r\n\r\n\t\t// Containers.\r\n\t\t\t$containers: map-get($config, 'containers');\r\n\r\n\t\t\t@if $containers {\r\n\r\n\t\t\t\t/* Containers */\r\n\r\n\t\t\t\t.container {\r\n\t\t\t\t\tmargin-left: auto;\r\n\t\t\t\t\tmargin-right: auto;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Use default is $containers is just \"true\".\r\n\t\t\t\t\t@if $containers == true {\r\n\t\t\t\t\t\t$containers: 960px;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Apply base.\r\n\t\t\t\t\t@include containers($containers);\r\n\r\n\t\t\t\t// Apply per-breakpoint.\r\n\t\t\t\t\t@each $name in map-keys($breakpoints) {\r\n\r\n\t\t\t\t\t\t// Get/use breakpoint setting if it exists.\r\n\t\t\t\t\t\t\t$x: map-get($configPerBreakpoint, $name);\r\n\r\n\t\t\t\t\t\t\t// Per-breakpoint config exists?\r\n\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t$y: map-get($x, 'containers');\r\n\r\n\t\t\t\t\t\t\t\t\t// Setting exists? Use it.\r\n\t\t\t\t\t\t\t\t\t\t@if $y {\r\n\t\t\t\t\t\t\t\t\t\t\t$containers: $y;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Create @media block.\r\n\t\t\t\t\t\t\t@media screen and #{map-get($breakpoints, $name)} {\r\n\t\t\t\t\t\t\t\t@include containers($containers);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t// Grid.\r\n\t\t\t$grid: map-get($config, 'grid');\r\n\r\n\t\t\t@if $grid {\r\n\r\n\t\t\t\t/* Grid */\r\n\r\n\t\t\t\t// Use defaults if $grid is just \"true\".\r\n\t\t\t\t\t@if $grid == true {\r\n\t\t\t\t\t\t$grid: ();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Sub-setting: Gutters.\r\n\t\t\t\t\t$grid-gutters: 40px;\r\n\t\t\t\t\t$x: map-get($grid, 'gutters');\r\n\r\n\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t$grid-gutters: $x;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Rows.\r\n\t\t\t\t\t.row {\r\n\t\t\t\t\t\tborder-bottom: solid 1px transparent;\r\n\t\t\t\t\t\t-moz-box-sizing: border-box;\r\n\t\t\t\t\t\t-webkit-box-sizing: border-box;\r\n\t\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row > * {\r\n\t\t\t\t\t\tfloat: left;\r\n\t\t\t\t\t\t-moz-box-sizing: border-box;\r\n\t\t\t\t\t\t-webkit-box-sizing: border-box;\r\n\t\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row:after, .row:before {\r\n\t\t\t\t\t\tcontent: '';\r\n\t\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t\tclear: both;\r\n\t\t\t\t\t\theight: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row.uniform > * > :first-child {\r\n\t\t\t\t\t\tmargin-top: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row.uniform > * > :last-child {\r\n\t\t\t\t\t\tmargin-bottom: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Gutters (0%).\r\n\t\t\t\t\t@include grid-gutters($grid-gutters, \\30 \\25, 0);\r\n\r\n\t\t\t\t// Apply base.\r\n\t\t\t\t\t@include grid($grid-gutters);\r\n\r\n\t\t\t\t// Apply per-breakpoint.\r\n\t\t\t\t\t@each $name in map-keys($breakpoints) {\r\n\r\n\t\t\t\t\t\t// Get/use breakpoint setting if it exists.\r\n\t\t\t\t\t\t\t$x: map-get($configPerBreakpoint, $name);\r\n\r\n\t\t\t\t\t\t\t// Per-breakpoint config exists?\r\n\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t$y: map-get($x, 'grid');\r\n\r\n\t\t\t\t\t\t\t\t\t// Setting exists?\r\n\t\t\t\t\t\t\t\t\t\t@if $y {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Sub-setting: Gutters.\r\n\t\t\t\t\t\t\t\t\t\t\t\t$x: map-get($y, 'gutters');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$grid-gutters: $x;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Create @media block.\r\n\t\t\t\t\t\t\t@media screen and #{map-get($breakpoints, $name)} {\r\n\t\t\t\t\t\t\t\t@include grid($grid-gutters, $name);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\t/// Resets browser styles.\r\n\t/// @param {string} $mode Mode (default is 'normalize').\r\n\t@mixin reset($mode: 'normalize') {\r\n\r\n\t\t@if $mode == 'normalize' {\r\n\r\n\t\t\t// normalize.css v3.0.2 | MIT License | git.io/normalize\r\n\t\t\t\thtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\r\n\r\n\t\t}\r\n\t\t@else if $mode == 'full' {\r\n\r\n\t\t\t// meyerweb.com/eric/tools/css/reset v2.0 | 20110126 | License: none (public domain)\r\n\t\t\t\thtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block;}body{line-height:1;}ol,ul{list-style:none;}blockquote,q{quotes:none;}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none;}table{border-collapse:collapse;border-spacing:0;}body{-webkit-text-size-adjust:none}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/// Vendorizes a declaration's property and/or value(s).\r\n\t/// @param {string} $property Property.\r\n\t/// @param {mixed} $value String/list of value(s).\r\n\t@mixin vendor($property, $value) {\r\n\r\n\t\t// Determine if property should expand.\r\n\t\t\t$expandProperty: index($vendor-properties, $property);\r\n\r\n\t\t// Determine if value should expand (and if so, add '-prefix-' placeholder).\r\n\t\t\t$expandValue: false;\r\n\r\n\t\t\t@each $x in $value {\r\n\t\t\t\t@each $y in $vendor-values {\r\n\t\t\t\t\t@if $y == str-slice($x, 1, str-length($y)) {\r\n\r\n\t\t\t\t\t\t$value: set-nth($value, index($value, $x), '-prefix-' + $x);\r\n\t\t\t\t\t\t$expandValue: true;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Expand property?\r\n\t\t\t@if $expandProperty {\r\n\t\t\t    @each $vendor in $vendor-prefixes {\r\n\t\t\t        #{$vendor}#{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\r\n\t\t\t    }\r\n\t\t\t}\r\n\r\n\t\t// Expand just the value?\r\n\t\t\t@elseif $expandValue {\r\n\t\t\t    @each $vendor in $vendor-prefixes {\r\n\t\t\t        #{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\r\n\t\t\t    }\r\n\t\t\t}\r\n\r\n\t\t// Neither? Treat them as a normal declaration.\r\n\t\t\t@else {\r\n\t\t        #{$property}: #{$value};\r\n\t\t\t}\r\n\r\n\t}","/// Makes an element's ::before pseudoelement a FontAwesome icon.\r\n/// @param {string} $where Optional pseudoelement to target (before or after).\r\n/// @param {string} $style Which font to use (solid, regular, or brands).\r\n/// @param {string} $content Optional content value to use.\r\n@mixin icon($where: before, $style: solid, $content: false) {\r\n\r\n\ttext-decoration: none;\r\n\r\n\t&::#{$where} {\r\n\r\n\t\t@if $content {\r\n\t\t\tcontent: $content;\r\n\t\t}\r\n\r\n\t\t@if $style == brands {\r\n\t\t\tfont-family: \"Font Awesome 5 Brands\";\r\n\t\t}\r\n\t\t@else {\r\n\t\t\tfont-family: \"Font Awesome 5 Free\";\r\n\t\t}\r\n\r\n\t\t@if $style == regular {\r\n\t\t\tfont-weight: 400;\r\n\t\t}\r\n\t\t@else {\r\n\t\t\tfont-weight: 900;\r\n\t\t}\r\n\r\n\t\tdisplay: inline-block;\r\n\t\tfont-size: 1.25em;\r\n\t\ttext-decoration: none;\r\n\t\tfont-style: normal;\r\n\t\tline-height: 1;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t}\r\n\r\n\t> .label {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n/// Applies padding to an element, taking the current element-margin value into account.\r\n/// @param {mixed} $tb Top/bottom padding.\r\n/// @param {mixed} $lr Left/right padding.\r\n/// @param {list} $pad Optional extra padding (in the following order top, right, bottom, left)\r\n/// @param {bool} $important If true, adds !important.\r\n@mixin padding($tb, $lr, $pad: (0,0,0,0), $important: null) {\r\n\r\n\t@if $important {\r\n\t\t$important: '!important';\r\n\t}\r\n\r\n\t$x: 0.1em;\r\n\r\n\t@if unit(_size(element-margin)) == 'rem' {\r\n\t\t$x: 0.1rem;\r\n\t}\r\n\r\n\tpadding: ($tb + nth($pad,1)) ($lr + nth($pad,2)) max($x, $tb - _size(element-margin) + nth($pad,3)) ($lr + nth($pad,4)) #{$important};\r\n\r\n}\r\n\r\n/// Encodes a SVG data URL so IE doesn't choke (via codepen.io/jakob-e/pen/YXXBrp).\r\n/// @param {string} $svg SVG data URL.\r\n/// @return {string} Encoded SVG data URL.\r\n@function svg-url($svg) {\r\n\r\n\t$svg: str-replace($svg, '\"', '\\'');\r\n\t$svg: str-replace($svg, '%', '%25');\r\n\t$svg: str-replace($svg, '<', '%3C');\r\n\t$svg: str-replace($svg, '>', '%3E');\r\n\t$svg: str-replace($svg, '&', '%26');\r\n\t$svg: str-replace($svg, '#', '%23');\r\n\t$svg: str-replace($svg, '{', '%7B');\r\n\t$svg: str-replace($svg, '}', '%7D');\r\n\t$svg: str-replace($svg, ';', '%3B');\r\n\r\n\t@return url(\"data:image/svg+xml;charset=utf8,#{$svg}\");\r\n\r\n}\r\n\r\n/// Initializes base flexgrid classes.\r\n/// @param {string} $vertical-align Vertical alignment of cells.\r\n/// @param {string} $horizontal-align Horizontal alignment of cells.\r\n@mixin flexgrid-base($vertical-align: null, $horizontal-align: null) {\r\n\r\n\t// Grid.\r\n\t\t@include vendor('display', 'flex');\r\n\t\t@include vendor('flex-wrap', 'wrap');\r\n\r\n\t\t// Vertical alignment.\r\n\t\t\t@if ($vertical-align == top) {\r\n\t\t\t\t@include vendor('align-items', 'flex-start');\r\n\t\t\t}\r\n\t\t\t@else if ($vertical-align == bottom) {\r\n\t\t\t\t@include vendor('align-items', 'flex-end');\r\n\t\t\t}\r\n\t\t\t@else if ($vertical-align == center) {\r\n\t\t\t\t@include vendor('align-items', 'center');\r\n\t\t\t}\r\n\t\t\t@else {\r\n\t\t\t\t@include vendor('align-items', 'stretch');\r\n\t\t\t}\r\n\r\n\t\t// Horizontal alignment.\r\n\t\t\t@if ($horizontal-align != null) {\r\n\t\t\t\ttext-align: $horizontal-align;\r\n\t\t\t}\r\n\r\n\t// Cells.\r\n\t\t> * {\r\n\t\t\t@include vendor('flex-shrink', '1');\r\n\t\t\t@include vendor('flex-grow', '0');\r\n\t\t}\r\n\r\n}\r\n\r\n/// Sets up flexgrid columns.\r\n/// @param {integer} $columns Columns.\r\n@mixin flexgrid-columns($columns) {\r\n\r\n\t> * {\r\n\t\t$cell-width: 100% / $columns;\r\n\t\twidth: #{$cell-width};\r\n\t}\r\n\r\n}\r\n\r\n/// Sets up flexgrid gutters.\r\n/// @param {integer} $columns Columns.\r\n/// @param {number} $gutters Gutters.\r\n@mixin flexgrid-gutters($columns, $gutters) {\r\n\r\n\t// Apply padding.\r\n\t\t> * {\r\n\t\t\t$cell-width: 100% / $columns;\r\n\r\n\t\t\tpadding: ($gutters * 0.5);\r\n\t\t\twidth: $cell-width;\r\n\t\t}\r\n\r\n}\r\n\r\n/// Sets up flexgrid gutters (flush).\r\n/// @param {integer} $columns Columns.\r\n/// @param {number} $gutters Gutters.\r\n@mixin flexgrid-gutters-flush($columns, $gutters) {\r\n\r\n\t// Apply padding.\r\n\t\t> * {\r\n\t\t\t$cell-width: 100% / $columns;\r\n\t\t\t$cell-width-pad: $gutters / $columns;\r\n\r\n\t\t\tpadding: ($gutters * 0.5);\r\n\t\t\twidth: calc(#{$cell-width} + #{$cell-width-pad});\r\n\t\t}\r\n\r\n\t// Clear top/bottom gutters.\r\n\t\t> :nth-child(-n + #{$columns}) {\r\n\t\t\tpadding-top: 0;\r\n\t\t}\r\n\r\n\t\t> :nth-last-child(-n + #{$columns}) {\r\n\t\t\tpadding-bottom: 0;\r\n\t\t}\r\n\r\n\t// Clear left/right gutters.\r\n\t\t> :nth-child(#{$columns}n + 1) {\r\n\t\t\tpadding-left: 0;\r\n\t\t}\r\n\r\n\t\t> :nth-child(#{$columns}n) {\r\n\t\t\tpadding-right: 0;\r\n\t\t}\r\n\r\n\t// Adjust widths of leftmost and rightmost cells.\r\n\t\t> :nth-child(#{$columns}n + 1),\r\n\t\t> :nth-child(#{$columns}n) {\r\n\t\t\t$cell-width: 100% / $columns;\r\n\t\t\t$cell-width-pad: ($gutters / $columns) - ($gutters / 2);\r\n\r\n\t\t\twidth: calc(#{$cell-width} + #{$cell-width-pad});\r\n\t\t}\r\n\r\n}\r\n\r\n/// Reset flexgrid gutters (flush only).\r\n/// Used to override a previous set of flexgrid gutter classes.\r\n/// @param {integer} $columns Columns.\r\n/// @param {number} $gutters Gutters.\r\n/// @param {integer} $prev-columns Previous columns.\r\n@mixin flexgrid-gutters-flush-reset($columns, $gutters, $prev-columns) {\r\n\r\n\t// Apply padding.\r\n\t\t> * {\r\n\t\t\t$cell-width: 100% / $prev-columns;\r\n\t\t\t$cell-width-pad: $gutters / $prev-columns;\r\n\r\n\t\t\tpadding: ($gutters * 0.5);\r\n\t\t\twidth: calc(#{$cell-width} + #{$cell-width-pad});\r\n\t\t}\r\n\r\n\t// Clear top/bottom gutters.\r\n\t\t> :nth-child(-n + #{$prev-columns}) {\r\n\t\t\tpadding-top: ($gutters * 0.5);\r\n\t\t}\r\n\r\n\t\t> :nth-last-child(-n + #{$prev-columns}) {\r\n\t\t\tpadding-bottom: ($gutters * 0.5);\r\n\t\t}\r\n\r\n\t// Clear left/right gutters.\r\n\t\t> :nth-child(#{$prev-columns}n + 1) {\r\n\t\t\tpadding-left: ($gutters * 0.5);\r\n\t\t}\r\n\r\n\t\t> :nth-child(#{$prev-columns}n) {\r\n\t\t\tpadding-right: ($gutters * 0.5);\r\n\t\t}\r\n\r\n\t// Adjust widths of leftmost and rightmost cells.\r\n\t\t> :nth-child(#{$prev-columns}n + 1),\r\n\t\t> :nth-child(#{$prev-columns}n) {\r\n\t\t\t$cell-width: 100% / $columns;\r\n\t\t\t$cell-width-pad: $gutters / $columns;\r\n\r\n\t\t\tpadding: ($gutters * 0.5);\r\n\t\t\twidth: calc(#{$cell-width} + #{$cell-width-pad});\r\n\t\t}\r\n\r\n}\r\n\r\n/// Adds debug styles to current flexgrid element.\r\n@mixin flexgrid-debug() {\r\n\r\n\tbox-shadow: 0 0 0 1px red;\r\n\r\n\t> * {\r\n\t\tbox-shadow: inset 0 0 0 1px blue;\r\n\t\tposition: relative;\r\n\r\n\t\t> * {\r\n\t\t\tposition: relative;\r\n\t\t\tbox-shadow: inset 0 0 0 1px green;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/// Initializes the current element as a flexgrid.\r\n/// @param {integer} $columns Columns (optional).\r\n/// @param {number} $gutters Gutters (optional).\r\n/// @param {bool} $flush If true, clears padding around the very edge of the grid.\r\n@mixin flexgrid($settings: ()) {\r\n\r\n\t// Settings.\r\n\r\n\t\t// Debug.\r\n\t\t\t$debug: false;\r\n\r\n\t\t\t@if (map-has-key($settings, 'debug')) {\r\n\t\t\t\t$debug: map-get($settings, 'debug');\r\n\t\t\t}\r\n\r\n\t\t// Vertical align.\r\n\t\t\t$vertical-align: null;\r\n\r\n\t\t\t@if (map-has-key($settings, 'vertical-align')) {\r\n\t\t\t\t$vertical-align: map-get($settings, 'vertical-align');\r\n\t\t\t}\r\n\r\n\t\t// Horizontal align.\r\n\t\t\t$horizontal-align: null;\r\n\r\n\t\t\t@if (map-has-key($settings, 'horizontal-align')) {\r\n\t\t\t\t$horizontal-align: map-get($settings, 'horizontal-align');\r\n\t\t\t}\r\n\r\n\t\t// Columns.\r\n\t\t\t$columns: null;\r\n\r\n\t\t\t@if (map-has-key($settings, 'columns')) {\r\n\t\t\t\t$columns: map-get($settings, 'columns');\r\n\t\t\t}\r\n\r\n\t\t// Gutters.\r\n\t\t\t$gutters: 0;\r\n\r\n\t\t\t@if (map-has-key($settings, 'gutters')) {\r\n\t\t\t\t$gutters: map-get($settings, 'gutters');\r\n\t\t\t}\r\n\r\n\t\t// Flush.\r\n\t\t\t$flush: true;\r\n\r\n\t\t\t@if (map-has-key($settings, 'flush')) {\r\n\t\t\t\t$flush: map-get($settings, 'flush');\r\n\t\t\t}\r\n\r\n\t// Initialize base grid.\r\n\t\t@include flexgrid-base($vertical-align, $horizontal-align);\r\n\r\n\t// Debug?\r\n\t\t@if ($debug) {\r\n\t\t\t@include flexgrid-debug;\r\n\t\t}\r\n\r\n\t// Columns specified?\r\n\t\t@if ($columns != null) {\r\n\r\n\t\t\t// Initialize columns.\r\n\t\t\t\t@include flexgrid-columns($columns);\r\n\r\n\t\t\t// Gutters specified?\r\n\t\t\t\t@if ($gutters > 0) {\r\n\r\n\t\t\t\t\t// Flush gutters?\r\n\t\t\t\t\t\t@if ($flush) {\r\n\r\n\t\t\t\t\t\t\t// Initialize gutters (flush).\r\n\t\t\t\t\t\t\t\t@include flexgrid-gutters-flush($columns, $gutters);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Otherwise ...\r\n\t\t\t\t\t\t@else {\r\n\r\n\t\t\t\t\t\t\t// Initialize gutters.\r\n\t\t\t\t\t\t\t\t@include flexgrid-gutters($columns, $gutters);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t}\r\n\r\n}\r\n\r\n/// Resizes a previously-initialized grid.\r\n/// @param {integer} $columns Columns.\r\n/// @param {number} $gutters Gutters (optional).\r\n/// @param {list} $reset A list of previously-initialized grid columns (only if $flush is true).\r\n/// @param {bool} $flush If true, clears padding around the very edge of the grid.\r\n@mixin flexgrid-resize($settings: ()) {\r\n\r\n\t// Settings.\r\n\r\n\t\t// Columns.\r\n\t\t\t$columns: 1;\r\n\r\n\t\t\t@if (map-has-key($settings, 'columns')) {\r\n\t\t\t\t$columns: map-get($settings, 'columns');\r\n\t\t\t}\r\n\r\n\t\t// Gutters.\r\n\t\t\t$gutters: 0;\r\n\r\n\t\t\t@if (map-has-key($settings, 'gutters')) {\r\n\t\t\t\t$gutters: map-get($settings, 'gutters');\r\n\t\t\t}\r\n\r\n\t\t// Previous columns.\r\n\t\t\t$prev-columns: false;\r\n\r\n\t\t\t@if (map-has-key($settings, 'prev-columns')) {\r\n\t\t\t\t$prev-columns: map-get($settings, 'prev-columns');\r\n\t\t\t}\r\n\r\n\t\t// Flush.\r\n\t\t\t$flush: true;\r\n\r\n\t\t\t@if (map-has-key($settings, 'flush')) {\r\n\t\t\t\t$flush: map-get($settings, 'flush');\r\n\t\t\t}\r\n\r\n\t// Resize columns.\r\n\t\t@include flexgrid-columns($columns);\r\n\r\n\t// Gutters specified?\r\n\t\t@if ($gutters > 0) {\r\n\r\n\t\t\t// Flush gutters?\r\n\t\t\t\t@if ($flush) {\r\n\r\n\t\t\t\t\t// Previous columns specified?\r\n\t\t\t\t\t\t@if ($prev-columns) {\r\n\r\n\t\t\t\t\t\t\t// Convert to list if it isn't one already.\r\n\t\t\t\t\t\t\t\t@if (type-of($prev-columns) != list) {\r\n\t\t\t\t\t\t\t\t\t$prev-columns: ($prev-columns);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Step through list of previous columns and reset them.\r\n\t\t\t\t\t\t\t\t@each $x in $prev-columns {\r\n\t\t\t\t\t\t\t\t\t@include flexgrid-gutters-flush-reset($columns, $gutters, $x);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Resize gutters (flush).\r\n\t\t\t\t\t\t@include flexgrid-gutters-flush($columns, $gutters);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t// Otherwise ...\r\n\t\t\t\t@else {\r\n\r\n\t\t\t\t\t// Resize gutters.\r\n\t\t\t\t\t\t@include flexgrid-gutters($columns, $gutters);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t}\r\n\r\n}",".header-overlay {\n    position: relative;\n    max-width: 600px; /* optional, controls text width */\n    margin: 0 auto;\n    padding: 1rem 2rem;\n    background-color: rgba(0, 0, 0, 0.5); /* dark semi-transparent */\n    color: white;\n    border-radius: 6px;\n  }\n\n  /* Optional: ensures embedded links are visible and stand out */\n  .header-overlay a {\n    color: #aad8ff;\n  }","@import \"jekyll-theme-prologue\";\n@import \"banner\";\n\n.image.featured {\n  text-align: center;\n}\n.image.featured img {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  max-height: 300px;\n  width: auto;\n}\n\n.location-info-two-columns {\n  display: flex;\n  justify-content: space-between;\n  gap: 2rem;\n  text-align: left;\n  margin-top: 2rem;\n  margin-bottom: 3rem;\n}\n\n.location-column {\n  flex: 1;\n  min-width: 200px;\n}\n\n.location-column h2 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  font-size: 1.5em;\n}\n\n.location-column address {\n  font-style: normal;\n  line-height: 1.5;\n  color: #666;\n}\n\n.location-column a {\n  color: #E27689;\n  text-decoration: none;\n  border-bottom: 1px dotted rgba(226, 118, 137, 0.8);\n}\n\n.location-column a:hover {\n  border-bottom-color: transparent;\n}\n\n"],"file":"main.css"}